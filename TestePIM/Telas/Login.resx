<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCadastro.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>