<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>